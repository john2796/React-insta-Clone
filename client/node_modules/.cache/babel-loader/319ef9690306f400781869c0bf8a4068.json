{"ast":null,"code":"import _classCallCheck from \"/Users/applemac/Desktop/react-insta-clone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/applemac/Desktop/react-insta-clone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/applemac/Desktop/react-insta-clone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/applemac/Desktop/react-insta-clone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/applemac/Desktop/react-insta-clone/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/applemac/Desktop/react-insta-clone/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/applemac/Desktop/react-insta-clone/src/components/instagram/InstaCard.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .comment_icons {\\n    margin-bottom: 10px;\\n    .comment_icons_heart .far {\\n      margin-right: 10px;\\n    }\\n    .comment_icons_heart .far,\\n    .comment_icons_comm .far {\\n      font-size: 25px;\\n      color: gray;\\n    }\\n  }\\n  .input_comment[type=\\\"placeholder\\\"] {\\n    padding: 100px auto;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Input } from \"reactstrap\";\nvar InstaCardStyle = styled.div(_templateObject());\n\nvar InstaCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InstaCard, _Component);\n\n  function InstaCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InstaCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InstaCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLiked: false\n    };\n\n    _this.isLikedHandler = function () {\n      _this.setState(function (state, props) {\n        return {\n          isLiked: !state.isLiked\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(InstaCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$item = this.props.item,\n          imageUrl = _this$props$item.imageUrl,\n          username = _this$props$item.username,\n          likes = _this$props$item.likes,\n          timestamp = _this$props$item.timestamp,\n          thumbnailUrl = _this$props$item.thumbnailUrl,\n          comments = _this$props$item.comments;\n      return React.createElement(InstaCardStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          marginBottom: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          width: 70,\n          height: 70,\n          borderRadius: \"50%\"\n        },\n        src: imageUrl,\n        alt: comments[0].text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), username), React.createElement(CardImg, {\n        top: true,\n        width: \"100%\",\n        src: thumbnailUrl,\n        alt: \"Card image cap\",\n        style: {\n          objectFit: \"cover\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment_icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"comment_icons_heart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-heart\",\n        style: this.state.isLiked ? {\n          color: \"red\"\n        } : null,\n        onClick: this.isLikedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"comment_icons_comm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(CardSubtitle, {\n        style: {\n          fontWeight: \"bold\",\n          margin: \"4px 0 10px 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.isLiked ? likes + 1 : likes, \" likes\"), comments.map(function (comments, index) {\n        return React.createElement(CardText, {\n          key: index,\n          style: {\n            margin: \"6px 0\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, comments.username), \" \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, comments.text));\n      }), React.createElement(\"span\", {\n        style: {\n          fontSize: 12,\n          color: \"gray\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, timestamp)), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        className: \"input_comment\",\n        placeholder: \"Add a comment...\",\n        style: {\n          borderBottom: \"none\",\n          minWidth: \"60%\",\n          borderTopColor: \"#DFDFDF\",\n          fontSize: 14\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return InstaCard;\n}(Component);\n\nInstaCard.propTypes = {\n  instagram: PropTypes.arrayOf(PropTypes.shape({\n    comments: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string,\n      username: PropTypes.string\n    })),\n    thumbnailUrl: PropTypes.string,\n    timestamp: PropTypes.string,\n    username: PropTypes.string\n  }))\n};\nexport default InstaCard;","map":{"version":3,"sources":["/Users/applemac/Desktop/react-insta-clone/src/components/instagram/InstaCard.js"],"names":["React","Component","PropTypes","styled","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Input","InstaCardStyle","div","InstaCard","state","isLiked","isLikedHandler","setState","props","item","imageUrl","username","likes","timestamp","thumbnailUrl","comments","marginBottom","width","height","borderRadius","text","objectFit","color","fontWeight","margin","map","index","fontSize","borderBottom","minWidth","borderTopColor","propTypes","instagram","arrayOf","shape","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Input\n} from \"reactstrap\";\n\nconst InstaCardStyle = styled.div`\n  .comment_icons {\n    margin-bottom: 10px;\n    .comment_icons_heart .far {\n      margin-right: 10px;\n    }\n    .comment_icons_heart .far,\n    .comment_icons_comm .far {\n      font-size: 25px;\n      color: gray;\n    }\n  }\n  .input_comment[type=\"placeholder\"] {\n    padding: 100px auto;\n  }\n`;\n\nclass InstaCard extends Component {\n  state = {\n    isLiked: false\n  };\n\n  isLikedHandler = () => {\n    this.setState((state, props) => {\n      return {\n        isLiked: !state.isLiked\n      };\n    });\n  };\n\n  render() {\n    const {\n      item: { imageUrl, username, likes, timestamp, thumbnailUrl, comments }\n    } = this.props;\n    return (\n      <InstaCardStyle>\n        <Card\n          style={{\n            marginBottom: 100\n          }}\n        >\n          <CardTitle>\n            <img\n              style={{\n                width: 70,\n                height: 70,\n                borderRadius: \"50%\"\n              }}\n              src={imageUrl}\n              alt={comments[0].text}\n            />\n            {username}\n          </CardTitle>\n          <CardImg\n            top\n            width=\"100%\"\n            src={thumbnailUrl}\n            alt=\"Card image cap\"\n            style={{\n              objectFit: \"cover\"\n            }}\n          />\n\n          <CardBody>\n            <div className=\"comment_icons\">\n              <span className=\"comment_icons_heart\">\n                <i\n                  className=\"far fa-heart\"\n                  style={this.state.isLiked ? { color: \"red\" } : null}\n                  onClick={this.isLikedHandler}\n                />\n              </span>\n              <span className=\"comment_icons_comm\">\n                <i className=\"far fa-comment\" />\n              </span>\n            </div>\n            <CardSubtitle\n              style={{\n                fontWeight: \"bold\",\n                margin: \"4px 0 10px 0\"\n              }}\n            >\n              {this.state.isLiked ? likes + 1 : likes} likes\n            </CardSubtitle>\n            {comments.map((comments, index) => (\n              <CardText\n                key={index}\n                style={{\n                  margin: \"6px 0\"\n                }}\n              >\n                <span style={{ fontWeight: \"bold\" }}>{comments.username}</span>{\" \"}\n                <span>{comments.text}</span>\n              </CardText>\n            ))}\n            <span\n              style={{\n                fontSize: 12,\n                color: \"gray\"\n              }}\n            >\n              {timestamp}\n            </span>\n          </CardBody>\n          <form>\n            <Input\n              type=\"text\"\n              className=\"input_comment\"\n              placeholder=\"Add a comment...\"\n              style={{\n                borderBottom: \"none\",\n                minWidth: \"60%\",\n                borderTopColor: \"#DFDFDF\",\n                fontSize: 14\n              }}\n            />\n          </form>\n        </Card>\n      </InstaCardStyle>\n    );\n  }\n}\n\nInstaCard.propTypes = {\n  instagram: PropTypes.arrayOf(\n    PropTypes.shape({\n      comments: PropTypes.arrayOf(\n        PropTypes.shape({\n          text: PropTypes.string,\n          username: PropTypes.string\n        })\n      ),\n      thumbnailUrl: PropTypes.string,\n      timestamp: PropTypes.string,\n      username: PropTypes.string\n    })\n  )\n};\n\nexport default InstaCard;\n"]},"metadata":{},"sourceType":"module"}